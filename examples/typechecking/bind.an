bind opt f =
    match opt with
    | Some x -> f x
    | None -> None

ret x = Some x

x = Some 10

add_one x =
    bind x (\x. ret (x + 1))

// args: --check --show-types
// expected stdout:
// add_one : ((Maybe int) -> (Maybe int))
// bind : (forall a b. ((Maybe a) (a -> (Maybe b)) -> (Maybe b)))
// ret : (forall a. (a -> (Maybe a)))
// x : (Maybe int)
